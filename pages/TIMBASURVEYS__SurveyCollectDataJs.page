<apex:page controller="TIMBASURVEYS.SurveyCollectController" showheader="false" sidebar="false" standardstylesheets="false">
    <apex:outputpanel layout="none" rendered="{!createTemplate}">
           <script type="text/javascript">
				var create_customer_portal_template = function () {
					createCustomerPortalTemplateOperation('buildCPTemplate');
				}

				function createCustomerPortalTemplateComplete(success){
					if(success){
                        alert('{!$Label.timbasurveys_surveycollect_The_customer_portal}.');
                    }
                    else{
                        alert('{!$Label.timbasurveys_surveycollect_Cannot_complete_this}.');
                    }
               }

               dojo.addOnLoad(create_customer_portal_template);

           </script>
       </apex:outputpanel>

    <script type="text/javascript">
        //Fill behalf
        jQuery.noConflict();

        function fill_survey(id,type){
            if(type=='Contact'){
                window.location = '{!$Page.Survey}?id={!URLENCODE(SurveyId)}&cId=' + encodeURIComponent(id) + '&custom_fill=true&back=collect';
            }else if(type=='Lead'){
                window.location = '{!$Page.Survey}?id={!URLENCODE(SurveyId)}&lId=' + encodeURIComponent(id) + '&custom_fill=true&back=collect';
            }
        }

	    function unescapeSingleQuotes(str){
	        return str.replace(new RegExp("\'", "g"), "'");
	    }

	    //numer to recipient
	    var numberCollerct = 0;
	    var notSended = {!numerNotSent};

	    var sId = '{!JSENCODE(SurveyId)}';
            dojo.addOnLoad(function(){
                    //initilize counter

                   // Add the class to load the css styling
                   dojo.query('body').addClass('timbaSurveys');
                   errorMailsTemplate();
               });

               function errorMailsTemplate(){
                    if({!!existEmailTemplate}){
                        emailTemplateErrorDijit.show();
                    }
                    if({!emailtemplateBroken}){
                        emailTemplateErrorDijit.show();
                    }
                    if({!fixCpBody}){
                        emailTemplateErrorDijit.show();
                    }
                }

                dojo.addOnLoad(add_switch_behavior);

                function add_switch_behavior(){
                    checkBtnClear();
                    dojo.query('a.switch').onclick(function(e){
                        dojo.toggleClass(this,'on');
                    });
                }

                // Get url param
                function getURLParam(strParamName) {
                    var strReturn = "";
                    var strHref = window.location.href;
                    if (strHref.indexOf("?") > -1) {
                        var strQueryString = strHref.substr(strHref.indexOf("?"));
                        var aQueryString = strQueryString.split("&");
                        for (var iParam = 0; iParam < aQueryString.length; iParam++) {
                            if (aQueryString[iParam].indexOf(strParamName.toLowerCase() + "=") > -1) {
                                var aParam = aQueryString[iParam].split("=");
                                strReturn = aParam[1];
                                break;
                            }
                        }
                    }
                    return unescape(strReturn);
                }

				function setCollection(switchDiv){
                	dataContainerOverlay.show();
                    if(dojo.hasClass(switchDiv, 'on')){
                    	collection('off');
                    }else{
						collection('on');
					}
				}

                    /**
                    * Cancel Notification Settings
                    */
                    function cancelNotificationSettings(){
                        notificationSetup.hide();
                    }


                    /**
                    * Set Chatter mode
                    function setChatter(switchDiv){
                        if(dojo.hasClass(switchDiv, 'on')){
                            sendByChatterSurvey('off');
                        } else {
                            sendByChatterSurvey('on');
                        }
                    }
                    */
                    /**
                    * Set Multifill mode
                    */
                    function setMulfiFill(switchDiv){
                        if(dojo.hasClass(switchDiv, 'on')){
                            setMultiFillStatusOperation('setMultiFill', 'off');
                        } else {
                            setMultiFillStatusOperation('setMultiFill', 'on');
                        }
                    }
                    
                    function setMultiFillStatusComplete(success, status){
                        if(success == 'true'){
                            if(status == 'on'){
                                status = 'off';
                            }
                            else if(status == 'off'){
                                status = 'on';
                            }
                        }else{
                            if(status == 'on'){status = 'off';}
                            if(status == 'off'){status = 'on';}
                        }
                    }

                    /**
                    * Set Anonymous mode
                    * Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                    */
                    function setAnonymous(switchDiv){
                        if(dojo.hasClass(switchDiv, 'on')){
                            anonymousSurveyStatusOperation('off');
                        } else {
                            anonymousSurveyStatusOperation('on');
                        }
                    }

                    function anonymousSurveyStatusComplete(success, status){
                        if(success){
                            if(status == 'on'){
                                status = 'off';
                                dojo.byId('Anonymous_Collection').style.display = '';
                                try{
                                    dojo.byId('Chatter_Switcher').style.display = '';
                                }catch(e){
                                	console.log('Unexpected error.');
                                }
                            }else if(status == 'off'){
                                dojo.byId('Anonymous_Collection').style.display = 'none';
                                try{
                                    dojo.byId('Chatter_Switcher').style.display = 'none';
                                }catch(e){
                                	console.log('Unexpected error.');
                                }
                                status = 'on';
                            }
                        } else {
                            if(status == 'on'){
                                status = 'off';
                            }
                            if(status == 'off'){
                                status = 'on';
                            }
						
                            if(status == 'off'){
                                dojo.byId('Anonymous_Collection').style.display = 'none';
                                try{
                                    dojo.byId('Chatter_Switcher').style.display = 'none';
                                }catch(e){
                                	console.log('Unexpected error.');
                                }
                            }else if(status == 'on'){
                                dojo.byId('Anonymous_Collection').style.display = '';
                                try{
                                    dojo.byId('Chatter_Switcher').style.display = '';
                                }catch(e){
                                	console.log('Unexpected error.');
                                }
                            }
						}
                        dataContainerOverlay.hide();
                    }

                    function sendByChatterSurveyComplete(success, status){
                        if(success){
                            if(status == 'on'){
                                status = 'off';
                                dojo.byId('chatterSent').innerHTML = '{!$Label.timbasurveys_collector_Shared}';
                                dojo.byId('chatterSent').style.color = 'green';
                                dojo.byId('chatterSent').style.display = '';
                            }else if(status == 'off'){
                                status = 'on';
                                dojo.byId('chatterSent').innerHTML = '';
                                dojo.byId('chatterSent').style.display = 'none';
                            }
                        }else {
                            if(status == 'off'){
                                dojo.byId('chatterSent').innerHTML = '';
                                dojo.byId('chatterSent').style.display = 'none';
                            }
                            if(status == 'on'){
                                dojo.byId('chatterSent').innerHTML = '{!$Label.timbasurveys_collector_chatter_try_again}';
                                dojo.byId('chatterSent').style.color = 'red';
                                dojo.byId('chatterSent').style.display = '';
                            }
                            if(status == 'on'){status = 'off';}
                            if(status == 'off'){status = 'on';}
                        }
                        dataContainerOverlay.hide();
                    }

                    function sendByChatterSurvey(status){
                        dataContainerOverlay.show();
                        sendByChatterSurveyOperation(status);
                    }

                    function collectionComplete(success, status){
                    	dataContainerOverlay.hide();
                        if(success){
                            if(dojo.hasClass(switchDiv, 'on')){
                                dojo.removeClass(switchDiv,'on');
                                dojo.addClass(switchDiv, 'off');
                                status = 'off';
                            } else {
                                dojo.removeClass(switchDiv,'off');
                                dojo.addClass(switchDiv, 'on');
                                status = 'on';
                            }
                            if(success == true && status == 'on'){
                                dojo.byId('date').innerHTML = operationStatus.date;
                            }
                        }else{
                            if(status == 'on'){status = 'off';}
                            if(status == 'off'){status = 'on';}
                        }
                    }

                    /**
                     * stopCollectingCall
                     * Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                     */
                     function collection(status) {
                        if(status == 'off'){
                            //call action function OFF
                            stopCollectionOperation('{!SurveyId}', status);
                        } else {
                            startCollectionOperation('{!SurveyId}', status);
                        }
                     }


                        function clearAll(){
                            if(confirm('{!$Label.timbasurveys_surveycollect_are_sure_delete}')){
                                removeAllNew();

                                var elemsDel = dojo.query('#ul_collect > li.addedContact');

                                for(var i = 0, l = elemsDel.length; i < l; i++){
                                    dojo.destroy(elemsDel[i]);
                                }
                                newContador = 0;
                                notSended = 0;
                                if (numberCollerct <= maxRecipentsPerPage){
                                    dojo.byId('more_').style.display = 'none';
                                }
                                checkBtnClear();
                            }
                        }

                        function showEmailNotifications(switchDiv){
							var obj = jQuery('#emailNotificationSwitch');
							var hasClass = jQuery(obj).hasClass('on');
                            if(hasClass){
                                dataContainerOverlay.show();
                                dojo.byId('email_notifications_div').style.display = 'none';
                                NotNotification(dojo.byId('emailNotificationSwitch'));
                            }else{
                                dojo.byId('email_notifications_div').style.display = 'block';
                                jQuery('#email_notifications').focus();
                            }
                        }

                        //Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                        function validateMail(obj){
                            dojo.byId('mail_error').innerHTML = '';
                                var notifyToEmail = dojo.byId('email_notifications').value;
                                var enableNotify = true;
                                if(notifyToEmail.length > 0){
                                    var filter = /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i ;
                                    if (filter.test(notifyToEmail)) {
                                        dataContainerOverlay.show();
                                        showEmailNotificationsOperation(enableNotify, notifyToEmail);
                                    } else {
                                            dojo.byId('mail_error').innerHTML = '{!$Label.timbasurvey_Collect_There_was_error_try_again}.';
                                    }
                                } else {
                                    dojo.byId('mail_error').innerHTML = '{!$Label.timbasurvey_Collect_There_was_error_try_again}.';

                                }
                        }

                        function NotNotification(obj){
                            dojo.byId('mail_error').innerHTML = '';
                            var notifyToEmail = dojo.byId('email_notifications').value;
                            var filter = /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i ;
                            if (!filter.test(notifyToEmail)) {
                                notifyToEmail = '';
                                dojo.byId('email_notifications').value = '';
                            }
                            var enableNotify = false;

                            //call actionfunction
                            //Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                            showEmailNotificationsOperation(enableNotify, notifyToEmail);
                        }

                    function showEmailNotificationsComplete(success){
                    	var obj = dojo.byId('email_notifications');
                        if(success){
                            dojo.addClass(obj, '');
                        }else{
                            dojo.byId('mail_error').innerHTML = '{!$Label.timbasurvey_Collect_There_was_error_try_again}.';
                        }
                        dataContainerOverlay.hide();
                    }

                    function saveLeadCatchingComplete(success, createLeadsEnabled){
                        if(success){
                            if(createLeadsEnabled == 'false' ){
                                dojo.byId('Create_Leads').style.display = 'none';
                            }else{
                                dojo.byId('Create_Leads').style.display = 'block';
                            }
                        }else{
                            alert('{!$Label.timbasurveys_surveycollect_Cannot_complete_this}');
                        }
                        dataContainerOverlay.hide();
                    }

                    //Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                    function saveLeadCatching(switchDiv){
                        var createLeadsEnabled = false;
                        var lead_info_required = dojo.byId('required_lead_data').checked;
                        if(dojo.hasClass(switchDiv, 'on')){
                            dojo.byId('Create_Leads').style.display = 'none';
                            saveLeadCatchingOperation(createLeadsEnabled, lead_info_required);
                        }else{
                            createLeadsEnabled = true;
                            dojo.byId('Create_Leads').style.display = 'block';
                            saveLeadCatchingOperation(createLeadsEnabled, lead_info_required);
                        }
                    }

                    //Improvement #24170 - Replace dojo functions to actionFunction in SurveyCollect
                    function CreateLavels(){
                        var lead_info_required = dojo.byId('required_lead_data').checked;
                        var createLeadsEnabled = true;
                        saveLeadCatchingOperation('createLeads', createLeadsEnabled, lead_info_required);
                    }


                        function remuveSelect(){
                            dojo.query("li").removeClass("selected");
                        }

                        function addSelect (e){
                            remuveSelect();
                            dojo.addClass(e,"selected");
                        }

                        function showSurveymodeCollection(){
                            hideButtonCopyAnonymous();
                            surveymodeCollectionDijit.show();
                            window.top.window.surveymodeCollectionOverlay.show();
                            dataContainerOverlay.show();
                            showIframe();

                            loadIframe();
                        }

                        function selectEmails(e){
                            hideIframe();
                            addSelect(e);
                            dojo.byId("theIframeEmail").style.display = 'block';
                            if(iframeEmails == null)
                                dojo.byId("theIframeEmail").src = "{!$Page.EmailCollectionWizard}?id={!URLENCODE(SurveyId)}";
                        }

                        function selectContact(e){
                            if(dojo.style(dojo.byId('theIframeContact'),'display') == 'none'){
                                dataContainerOverlay.show();
                            }

                            hideIframe();
                            addSelect(e);
                            dojo.byId("theIframeContact").style.display = 'block';
                            if(iframeContact === null)
                                dojo.byId("theIframeContact").src = "{!$Page.ContactCollectionWizard}?surveyid={!URLENCODE(SurveyId)}";
                            else
                                setTimeout("iframeContact.hide_edit_delete()",1000);

                        }

                        function selectUsers(e){
                            hideIframe();
                            addSelect(e);
                            dojo.byId("theIframeUser").style.display = 'block';
                            if(iframeUsers === null)
                                dojo.byId("theIframeUser").src = "{!$Page.UserCollectionWizard}?id={!JSENCODE(SurveyId)}";
                        }

                        function selectLeads(e){
                            if(dojo.style(dojo.byId('theIframeLeads'),'display') == 'none'){
                                dataContainerOverlay.show();
                            }

                            hideIframe();
                            addSelect(e);
                            dojo.byId("theIframeLeads").style.display = 'block';
                            if(!(iframeLeads === null))
                                    setTimeout("iframeLeads.hide_edit_delete()",1000);
                        }

                        function loadIframe(){
                            var reloaded = true;
                            if (iframeContact === null){
                                dojo.byId("theIframeContact").src = "{!$Page.ContactCollectionWizard}?surveyid={!URLENCODE(SurveyId)}";
                                reloaded = false;
                            }
                            if (iframeEmails === null){
                                dojo.byId("theIframeEmail").src = "{!$Page.EmailCollectionWizard}?id={!URLENCODE(SurveyId)}";
                                reloaded = false;
                            }
                            if (iframeLeads === null){
                                dojo.byId("theIframeLeads").src = "{!$Page.LeadCollectionWizard}?surveyid={!URLENCODE(SurveyId)}";
                                reloaded = false;
                            }
                            if (iframeUsers === null){
                                dojo.byId("theIframeUser").src = "{!$Page.UserCollectionWizard}?id={!URLENCODE(SurveyId)}";
                                reloaded = false;
                            }

                            if(!reloaded){
                                dataContainerOverlay.show();
                                setTimeout("loadIframe()",10000);
                            }else{
                                dataContainerOverlay.hide();
                                window.top.window.surveymodeCollectionOverlay.hide();
                            }
                        }

                        function loadingtheIframeEmailFin(){
                            dojo.byId("theIframeEmail").style.display = 'none';
                            if(dojo.byId("theIframeEmail").src != '')
                                dojo.byId("theIframeEmail").style.display = 'block';
                        }

                        function loadingtheIframeContacFin(){
                            if(dojo.byId("theIframeContact").src != ''){
                                dojo.byId("theIframeContact").style.display = 'none';
                            }
                        }

                        function loadingtheIframeUserFin(){
                            dojo.byId("theIframeUser").style.display = 'none';
                        }

                        function loadingtheIframeLeadsFin(){
                            if(dojo.byId("theIframeLeads").src != ''){
                                dojo.byId("theIframeLeads").style.display = 'none';
                                setTimeout("dataContainerOverlay.hide()",2000);
                            }
                        }

                        function  hideIframe(){
                            dojo.byId("theIframeLeads").style.display = 'none';
                            dojo.byId("theIframeUser").style.display = 'none';
                            dojo.byId("theIframeContact").style.display = 'none';
                            dojo.byId("theIframeEmail").style.display = 'none';
                        }

                        function showIframe(){
                            dojo.byId("theIframeEmail").style.display = 'block';
                            dojo.byId("theIframeLeads").style.display = 'block';
                            dojo.byId("theIframeContact").style.display = 'block';
                            dojo.byId("theIframeUser").style.display = 'block';
                        }
//--------------------------------------------------------------------------------------------------------------------
//----------------------------------------- button done --------------------------------------------------------------
    var newContador = 0;

    var Lead = new Array();
    var records = new Array();
    var Emails = new Array();
    var EmailsError = new Array();
    var UserID = new Array();
    var IdCPortal = new Array();
    // var email send
    var sendEmail = '';
    var sendUser = '';
    var sendLead = '';
    var sendContact = '';

    // New recipients added in this session
    var new_recipients = {};
        new_recipients.leads = [];
        new_recipients.contacts = [];
        new_recipients.emails = [];
        new_recipients.users = [];

        var iframeContact = null;
        var iframeEmails = null;
        var iframeLeads = null;
        var iframeUsers = null;

        //constant to set page size of the recipents
        var maxRecipentsPerPage = {!pageSize};


        function loadingContact(ic){
            iframeContact = ic;
        }
        function loadingEmial(ie){
            iframeEmails = ie;
        }
        function loadingLeads(il){
            iframeLeads = il;
        }
        function loadingUser(iu){
            iframeUsers = iu;
        }

        //------------------------------
        //    done
        // -----------------------------

        function LoadingDataIframe(){

            Lead = new Array();
            records = new Array();
            Emails = new Array();
            EmailsError = new Array();
            UserID = new Array();

            if (!(iframeEmails === null)){
                var emailCuestion = iframeEmails.confirmMails();
                if(emailCuestion){
                    clearErrorLeadContact();
                    dataContainerOverlay.show();
                    showIframe();
                    setTimeout('salvedDataIframe()',3000);
                }
            }
        }

        function salvedDataIframe(){
            if(!(iframeContact === null))
                iframeContact.clickContact();

            if(!(iframeLeads === null)){
                iframeLeads.clickLeads();
            }
            if(!(iframeEmails === null)){
                Emails = iframeEmails.returnEmails();
                EmailsError = iframeEmails.returnEmailError();
            }
            if(!(iframeUsers === null) || iframeUsers != undefined ){
                UserID = iframeUsers.returnUserId();
            }
            if ( (Lead.length > 0) || (records.length > 0) || (Emails.length > 0) || (UserID.length > 0)){
                document.getElementById("sendButton").style.visibility = "visible";
            } else {
                document.getElementById("sendButton").style.visibility = "hidden";
            }

            surveymodeCollectionDijit.onCancel();
            mailsErrorMsg();
            loadingNewsContainer();
            dataContainerOverlay.show();
        }

        //---------------------------------
        //       Error mails
        //---------------------------------
        function mailsErrorMsg(){
            dojo.byId('errorEmails').style.display = 'none';
            if(EmailsError.length > 1){
                dojo.byId('errorEmails').style.display = 'block';
                dojo.byId('errorEmailDiv').innerHTML = EmailsError;
            }
        }

        //---------------------------------
        //      load recipient new
        //---------------------------------
        function loadRecipientNew(){
            var i ;
            var cont = 0
            if(Lead.length > 0){
                for(i = 0 ; i < Lead.length; i++){
                    new_recipients.leads.push([Lead[i],Lead[i]]);
                }
            }

            if(records.length > 0){
                for(i = 0 ; i < records.length; i++){
                    new_recipients.contacts.push([records[i],records[i]]);
                }
            }
            if(UserID.length > 1){
                for(i = 0 ; i < UserID.length - 1; i++){
                    new_recipients.users.push([UserID[i],UserID[i]]);
                }
            }
            if(Emails.length > 1){
                for(i=0 ; i < Emails.length - 1; i++){
                    new_recipients.emails.push([Emails[i],Emails[i]]);
                }
            }
        }

        //-------------------------------------------------------
        //             weapon container line
        //-------------------------------------------------------
        function bulld_collector_item(name,id,mail,type){
            var item = '<li title = "' + type + '" class="addedContact" id="' + id + '">';
            var url;
            switch(type){
                case "Lead":
                    url = "{!URLFOR($Resource.SurveyResources2, 'img/collector/lead_big.png')}";
                break;
                case "Contact":
                    url = "{!URLFOR($Resource.SurveyResources2, 'img/collector/contacticon_big.png')}";
                break;
                case "Email":
                    url = "{!URLFOR($Resource.SurveyResources2, 'img/collector/mail_big.png')}";
                break;
                case "User":
                    url = "{!URLFOR($Resource.SurveyResources2, 'img/collector/usersicon_big.png')}";
                break;
            }
            item += '<div class="imgS"><img src="' + url + '"/></div>';
            item += '<div class="textS">';
            item += '   <div class="nomP">' + name + '</div>';
            item += '   <div class="nomE">' + mail + '</div>';
            item += '</div>';
            url = "{!URLFOR($Resource.SurveyResources2, 'img/icons/gray_cross.png')}";
            item += '<div class="close"><a class="remove" href="javascript:;" onclick="remove_recipient(\'' + id + '\',\'' + type + '\');"><img border="0" src="' + url + '" /></a></div>';
            if(type=='Contact' || type=='Lead'){
            var id2='A'+id;
            item += '<a  class="viewReply2" href="javascript:;" onmouseover="sizeImg(\'' + id2 + '\');" onmouseout="sizeImge(\'' + id2 + '\');" onclick="fill_survey(\'' + id + '\',\'' + type + '\');" ><img border="0" id="' + id2 + '" width="10" height="25" src="{!URLFOR($Resource.SurveyResources2, 'img/collector/fill_survey.PNG')}" /></a>';
            }
            item += '</li>';
            dojo.place(item, dojo.query('.listCollect li')[0], 'before');
        }

        function sizeImg(img){
            dojo.byId(img).style.width = '35px';
        }

        function sizeImge(img){
            dojo.byId(img).style.width = '30px';

        }

        //-----------------------------------------------------
        //            Load container page
        //-----------------------------------------------------
        function loadingNewsContainer(){
            loadRecipientNew();
            LoadingNameEmail();
        }

        //----------------------------------------------------
        //          Removes item new the containers Portal
        //----------------------------------------------------

        function removeCP(id){
            var cp = new Array();
            for(var i = 0, k = IdCPortal.length; i < k; i++){
                if(id != IdCPortal[i]){
                    cp.push(IdCPortal[i]);
                }
            }
            IdCPortal = cp;
        }

        //---------------------------------------------------
        //          Removes item array
        //---------------------------------------------------
        function RemoveArray(array,id){
            var arrayNew = new Array();
            for(var i = 0, l = array.length; i < l; i++){
                if(array[i][0] != id)
                    arrayNew.push(array[i]);
            }
            return arrayNew;
        }

        //---------------------------------------------------
        //          Removes all item new
        //---------------------------------------------------
        function removeAllNew(){
            remove_recipient_salved_all();
            IdCPortal = [];

        }

        //-------------------------------------------------------
        //       Removes item salved and not sending
        //-------------------------------------------------------
        function remove_recipient(id,types,isColl){
            var remove = dojo.query('.remove',dojo.byId(id));
            remove[0].style.display = 'none';
            var url = "{!URLFOR($Resource.SurveyResources2, 'img/collector/remove_loading.gif')}";
            var add = dojo.query('.close',dojo.byId(id));
            var nod = '<a class="loadingR" href="javascript:;"><img src="' + url + '" /></a>';
            dojo.place(nod,add[0]);
            add = dojo.query('.loadingR',dojo.byId(id));
            removeRecipientOperation('removeRecipient', getURLParam('id'), id, types);
        }

        function removeRecipientCompleted(success, error, id){
            if (success){
                    dojo.destroy(dojo.byId(id));
                    newContador--;
                    notSended --;
                    removeCP(id);
                    checkBtnClear();
                    if(isColl=="true"){
                        window.location.reload();
                    }
            }else{
                alert('{!$Label.timbasurveys_surveycollect_Cannot_remove_recipient}. ');
                dojo.destroy(add[0]);
                remove.style.display = 'block';
            }
        }

        //-------------------------------------------------------
        //      Removes item salved and not sending all
        //-------------------------------------------------------
        function remove_recipient_salved_all(){
            removeRecipientListOperation('removeRecipientList');
        }

        function removeRecipientListComplete(success, numerInvitation){
            numberCollerct = numerInvitation;
            if(success){
                if({!TEXT(CurrentSurvey.CollectedResponses__c)}>0){
                    window.location.reload();
                }
            }
        }

        //-------------------------------------------------------
        //              Alerta copy url Anonymous
        //-------------------------------------------------------
        function alertUser(){
                alert('{!$Label.timbasurveys_surveycollect_The_URL_has_been_copied}.');
        }

        //----------------------------------------------------------
        //               Loading name and mail to obj
        //----------------------------------------------------------
        function LoadingNameEmail(){
            idCompile();
            sendEmail= dojo.byId('pE').value;
            sendContact = dojo.byId('cIds').value;
            sendLead = dojo.byId('LIds').value;
            sendUser = dojo.byId('uIds').value;
            NameEmailsCollectOperation('Name_Emails_Collect', getURLParam('id'),sendContact, sendLead, sendUser, sendEmail);
        }

        function NameEmailsCollectCompleted(success, error, data ){
            var data_new = dojo.fromJson(data);
            var cont = 0;
            if(data_new.contacts != null && data_new.contacts != ''){
                for(i = data_new.contacts.length; i >= 0; i--){
                    if(data_new.contacts[i] != null){
                        dojo.destroy(data_new.contacts[i].Id);
                        if (cont < maxRecipentsPerPage){
                            //bulld_collector_item(unescapeSingleQuotes(data_new.contacts[i].Name),data_new.contacts[i].Id,unescapeSingleQuotes(data_new.contacts[i].Email),'Contact');
                        }
                        if(data_new.contacts[i].isPortal)
                            IdCPortal.push(data_new.contacts[i].Id);
                        cont++;
                    }
                }
            }
            if(data_new.leads != null && data_new.leads != ''){
                for(i = 0; i < data_new.leads.length; i++){
                    if(data_new.leads[i] != null){
                        dojo.destroy(data_new.leads[i].Id);
                        if (cont < maxRecipentsPerPage){
                            //bulld_collector_item(unescapeSingleQuotes(data_new.leads[i].Name),data_new.leads[i].Id,unescapeSingleQuotes(data_new.leads[i].Email),'Lead');
                        }
                        cont++;
                    }
                }
            }
            if(data_new.users != null && data_new.users != ''){
                for(i = 0; i < data_new.users.length; i++){
                    if(data_new.users[i] != null){
                        dojo.destroy(data_new.users[i].Id);
                        if (cont < maxRecipentsPerPage){
                            bulld_collector_item(unescapeSingleQuotes(data_new.users[i].Name),data_new.users[i].Id,unescapeSingleQuotes(data_new.users[i].Email),'User');
                        }
                        cont++;
                    }
                }
            }
            if(data_new.emails!= null && data_new.emails != ''){
                for(i = 0; i < maxRecipentsPerPage; i++){
                    if(data_new.emails[i] != null){
                        dojo.destroy(data_new.emails[i].Id);
                        if (cont < maxRecipentsPerPage){
                            //bulld_collector_item(unescapeSingleQuotes(data_new.emails[i].Name),data_new.emails[i].Id,unescapeSingleQuotes(data_new.emails[i].Email),'Email');
                        }
                        cont++;
                    }
                }
            }
            if(data_new.duplicated!= null && data_new.duplicated != ''){
                var errors = dojo.byId('tableErrorDuplicated');
                var tr;
                var long = data_new.errors.length;
                for(i = 0; i < data_new.duplicated.length; i++){
                    if(data_new.duplicated[i] != null){
                        tr = '<tr><td> '+data_new.duplicated[i].Type+'</td>';
                        tr+= '<td> '+data_new.duplicated[i].Name+'</td></tr>';
                        dojo.place(tr,errors, 'last');
                    }
                }
                clearErrorLeadContact();
                dojo.byId('errorDuplicated').style.display='';
                dojo.byId('errorEmailsButton').style.display='none';
            }
            //modificaciones martin
            if(data_new.errors != null && data_new.errors != ''){
                closeShowDuplicated();
                var errors = dojo.byId('tableErrorLeadContact');
                var tr;
                var long = data_new.errors.length;
                var ErrorDescription = '';
                var vMail = '0';
                var vAccount = '0';
                var vBounced = '0';
                if(dojo.isIE)
                    long--;
                for(i = 0; i < long; i++){
                    tr = '<tr><td> '+data_new.errors[i].Type+'</td>';
                    tr+= '<td class="errorName">'+data_new.errors[i].Name+'</td>';
                    if(data_new.errors[i].TypeErr=="A"){
                        ErrorDescription = 'No Account';
                        vAccount = '1';
                    }else if(data_new.errors[i].TypeErr=="B"){
                        ErrorDescription = '{!$Label.timbasurveys_surveycollect_bounced_email_text}';
                        vBounced = '1';
                    }else{
                        ErrorDescription = 'No Mail';
                        vMail = '1';
                    }
                    tr+='<td>'+ ErrorDescription +'</td></tr>';
                    dojo.place(tr,errors, 'last');
                }
                if(vMail=='1'){
                    dojo.byId('errorLeadContact').style.display='';
                    dojo.byId('errorLeadContactMail').style.display='';
                }
                if(vAccount=='1'){
                    dojo.byId('errorLeadContact').style.display='';
                    dojo.byId('errorLeadContactNoAccount').style.display='';
                }
                else if(vBounced=='1'){
                    dojo.byId('errorLeadContactNoAccount').style.display='none';
                    dojo.byId('errorLeadContact').style.display='';
                    dojo.byId('errorLeadContactBounced').style.display='';
                }
            }
            salved_recipient();
        }

        //------------------------------------------------------------
        //      move send to existent and switch class
        //------------------------------------------------------------
        function moveNewExistentSend(){
            var parameters = new Array();
            var imgs = new Array();
            var i= 0;
            var nodo;
            var name;
            var email;
            var nodosUl=dojo.query("#ul_collect .addedContact[title='Lead']");

            for (i = 0 ; i < nodosUl.length ; i++){
                nodo = nodosUl[i];
                name = dojo.query('.nomP',nodo)[0].innerHTML;
                email = dojo.query('.nomE',nodo)[0].innerHTML;
                new_recipients.leads.push([nodo.id,name,email]);
            }

            nodosUl=dojo.query("#ul_collect .addedContact[title='User']");

            for (i = 0 ; i < nodosUl.length ; i++){
                nodo = nodosUl[i];
                name = dojo.query('.nomP',nodo)[0].innerHTML;
                email = dojo.query('.nomE',nodo)[0].innerHTML;
                new_recipients.users.push([nodo.id,name,email]);
            }

            nodosUl=dojo.query("#ul_collect .addedContact[title='Contact']");

            for (i = 0 ; i < nodosUl.length ; i++){
                nodo = nodosUl[i];
                name = dojo.query('.nomP',nodo)[0].innerHTML;
                email = dojo.query('.nomE',nodo)[0].innerHTML;
                new_recipients.contacts.push([nodo.id,name,email]);
            }

            nodosUl=dojo.query("#ul_collect .addedContact[title='Email']");

            for (i = 0 ; i < nodosUl.length ; i++){
                nodo = nodosUl[i];
                name = dojo.query('.nomP',nodo)[0].innerHTML;
                email = dojo.query('.nomE',nodo)[0].innerHTML;
                new_recipients.emails.push([nodo.id,name,email]);
            }


            parameters['newusers'] = new_recipients.users;
            imgs['users'] = "{!URLFOR($Resource.SurveyResources2,'img/collector/users-pending.png')}";

            parameters['newemails'] = new_recipients.emails;
            imgs['emails'] = "{!URLFOR($Resource.SurveyResources2,'img/collector/mail-pending.png')}";

            parameters['newcontacts'] = new_recipients.contacts;
            imgs['contacts'] = "{!URLFOR($Resource.SurveyResources2,'img/collector/contacticon_waiting_big.png')}";

            parameters['newleads'] = new_recipients.leads;
            imgs['leads'] = "{!URLFOR($Resource.SurveyResources2,'img/collector/lead-pending.png')}";

            //moveNewExistent('users');
            //moveNewExistent('emails');
            //moveNewExistent('contacts');
            //moveNewExistent('leads');

            new_recipients.users = [];
            new_recipients.emails = [];
            new_recipients.contacts = [];
            new_recipients.leads = [];

            /*function moveNewExistent(name){
                for (var i = 0, l = parameters['new' + name].length; i < l; i++ ){
                    var img = imgs[name];
                    var adds = '<li class="waiting"><div class="imgS"><img src="' + img + '"/>';
                    adds += '</div><div class="textS"><div class="nomP">' + (parameters['new' + name])[i][1] + '</div><div class="nomE">' + (parameters['new' + name])[i][2] + '</div></div><div class="waitingText">{!$Label.timbasurveys_surveycollect_not_completed}</div></li>';
                    dojo.destroy(parameters['new' + name][i][0]);
                    dojo.place(adds, dojo.query('.listCollect')[0], 'last');
                }
            }*/
        }


        //-----------------------------------------------------
        //  Button Salved contact user lead email not sending
        //-----------------------------------------------------
        function salved_recipient(){
            idCompile();
            dojo.byId('pE').value = sendEmail;
            dojo.byId('cIds').value = sendContact;
            dojo.byId('LIds').value = sendLead;
            dojo.byId('uIds').value = sendUser;
            dataContainerOverlay.show();
            salvedCollectorOperation('salvedCollector', getURLParam('id'), sendEmail, sendContact, sendLead, sendUser);
        }

        function savedCollectorCompleted(success, numberRecipient, error){
            if (success){
                numberCollerct = numberRecipient;

                notSended =  notSended + new_recipients.users.length;
                notSended =  notSended + new_recipients.emails.length;
                notSended =  notSended + new_recipients.contacts.length;
                notSended =  notSended + new_recipients.leads.length;

                checkBtnClear();
                new_recipients.users = [];
                new_recipients.emails = [];
                new_recipients.contacts = [];
                new_recipients.leads = [];
                if ( numberCollerct > maxRecipentsPerPage ){
                    setTimeout("dataContainerOverlay.hide();dojo.byId('more_').style.display = '';",4000);
                }else{
                    setTimeout("dataContainerOverlay.hide();",4000);
                }
            }else{
                alert('{!$Label.timbasurveys_surveycollect_Not_recipeint_save}');
            }
            updateRecipientListAction();
        }
        
        function updateRecipientListCompleted(){
        	dataContainerOverlay.hide();
        }

        //------------------------------------------------------
        //          Close overides Surveymode Collection
        //------------------------------------------------------
        function closeSurveymodeCollection(){
            iframeContact = null;
            iframeEmails = null;
            iframeLeads = null;
            iframeUsers = null;

            var select = dojo.query("div#tabPanel > ul > li ");
            select.removeClass("selected");
            dojo.addClass(select[0],"selected");
            showButtonCopyAnonymous();
        }

        function hideButtonCopyAnonymous(){
            dojo.byId('buttonCopyAnonymous').style.display = 'none';
        }
        function showButtonCopyAnonymous(){
            dojo.byId('buttonCopyAnonymous').style.display = 'block';
        }

        function etampalte(){
            window.open('/' + '{!URLENCODE(eTemplate.Id)}');
        }

        function redirectIntaller(){
            window.location = 'http://survey.timbasoftware.com/install/overrides-and-integration';
        }

        function attachListCollect(){
            <apex:repeat value="{!Recipient_list}" var="item" >
                if({!!item.Invitation}){
                    newContador++;
                    notSended++;

                }

            </apex:repeat>
            checkBtnClear();
            dojo.destroy('more_');
            var li = dojo.query('#ul_Hide');
            for (var i = 0 ; i < li.length ; i++){
                dojo.place(li[i].innerHTML, dojo.byId('ul_collect'),'last');
            }
        }

        function attachListCollectSelectRecip(){
            <apex:repeat value="{!Recipient_list}" var="item" >
                if({!!item.Invitation}){
                    newContador++;
                    notSended++;

                }

            </apex:repeat>
            dojo.destroy('more');
            var li = dojo.query('#ul_HideSelectRecipient');
            for (var i = 0 ; i < li.length ; i++){
                dojo.place(li[i].innerHTML, dojo.byId('ul_collectSelectRecipient'),'last');
            }
        }

        function paginationNext_more(){
            dojo.byId('more_Text').style.display = 'none';
            dojo.byId('more_Img').style.display = '';
            paginationNext();
        }
        
         function paginationNextSelectRecipient(){
            dojo.byId('moreText').style.display = 'none';
            dojo.byId('moreImg').style.display = '';
            paginationNextSelectRecip();
        }

        function updateListCollect(){
            var more  = dojo.byId('more_');
            dojo.query('#ul_collect li').forEach(dojo.destroy);
            attachListCollect();
            dojo.place(more, dojo.byId('ul_collect'),'last');
        }

        //-------------------------------------------------------
        //                 loading all id to form
        //-------------------------------------------------------
        function idCompile(){

            var arrayEmail = new Array();
            var arrayLead = new Array();
            var arrayContact = new Array();
            var arrayUser = new Array()

            arrayEmail.push(new_recipients.emails);
            arrayLead.push(new_recipients.leads);
            arrayContact.push(new_recipients.contacts);
            arrayUser.push(new_recipients.users);

            sendEmail = idCompilationInt(arrayEmail);
            sendUser = idCompilationInt(arrayUser);
            sendLead = idCompilationInt(arrayLead);
            sendContact = idCompilationInt(arrayContact);


            dojo.byId('pE').value = sendEmail;
            dojo.byId('cIds').value = sendContact;
            dojo.byId('LIds').value = sendLead;
            dojo.byId('uIds').value = sendUser;

            function idCompilationInt(arrayV){
                var res = '';
                for (var i = 0, l = arrayV.length; i < l; i++ ){
                    for(var j = 0 , k = arrayV[i].length; j < k; j++ ){
                        if(arrayV[i][j] != null){
                            if(arrayV[i][j][0] != null && arrayV[i][j][0] != ''){
                                res += arrayV[i][j][0] + "|";
                            }
                         }
                    }
                }
                return res;
            }
        }
        function clearErrorLeadContact (){
            LeadContactCollectorError.hide();
            dojo.query('#tableErrorLeadContact tr').forEach(dojo.destroy);
            dojo.byId('errorLeadContact').style.display='none';
            dojo.byId('errorLeadContactBounced').style.display='none';
        }

        function closeShowDuplicated (){
            LeadContactCollectorError.hide();
            dojo.query('#tableErrorDuplicated tr').forEach(dojo.destroy);
            dojo.byId('errorDuplicated').style.display='none';
        }


        function cutString(text, n){
            if(text == null)
                return '';
            if(text.length > n)
                return text.substring(0,n)+'...';
            return text;

        }

        function copyUrl(){
            objFlash = document.isSWF || document.getElementById('isSWF');
            objFlash.SetVariable( 'click__', 1 );
            alertUser();
        }

        function checkBtnClear(){
            if (notSended==0){
                dojo.byId('clearBTN').disabled = true;
                dojo.byId('clearBTN').style.display = 'none';
            } else {
                dojo.byId('clearBTN').disabled = false;
                dojo.byId('clearBTN').style.display = '';
            }
        }

        function onOfExpirationDate(aElement){
        	if (jQuery(aElement).hasClass('on')){
        		surveyExpirationDate(false,'');
        		jQuery('.dateSelectorMaincontainer').hide();
        	}else{
	        	jQuery('.dateSelectorMaincontainer').show();
				var tmpDate = new Date();
				var currentYear = tmpDate.getFullYear();
				var currentMonth = tmpDate.getMonth() + 1;
				var currentDay = tmpDate.getDate();
				var startDate = currentYear + '-' + currentMonth + '-' + currentDay;
				jQuery(function(){
				    Date.format = 'yyyy-mm-dd';
				    jQuery('.datepicker').datePicker({
				            clickInput:true,
				            startDate: startDate
				        })
				        .dpSetOffset(25, -5);
				});
				// when it loads, set the value as today if survey's expiration has none
				defaultDate();
				dateChanged();
			}
        }
        function defaultDate(){
        	if ( jQuery('#expirationDateInput').val() == '' || jQuery('#expirationDateInput').val() == '-0-' || jQuery('#expirationDateInput').val() == '--' || jQuery('#expirationDateInput').val().trim() == '--' ){
        		var tmpDate = new Date();
				var currentYear = tmpDate.getFullYear();
				var currentMonth = tmpDate.getMonth() + 1;
				var currentDay = tmpDate.getDate();
				var tmpDateStr = currentYear + '-' + currentMonth + '-' + currentDay;
				jQuery('.datepicker').datePicker("setDate", tmpDateStr);
				jQuery('.datepicker').datePicker( "refresh" );
				jQuery('#expirationDateInput').val(tmpDateStr);
        	}
        }

        function wrongDate(eDate){
        	var today = new Date();
        	if ( today > eDate ) return true;
        	else return false;
        }

        function dateChanged(){
        	dataContainerOverlay.show();
        	previousDate = jQuery('#expirationDateInput').val();
			surveyExpirationDate(true,previousDate);
        }

        function surveyExpirationDateCompleted(success, message){
        	if (success){
        		dataContainerOverlay.hide();
        	}else{
        		dataContainerOverlay.hide();
        		alert('{!$Label.timbasurveys_surveycollect_Not_recipeint_save}');
        	}
        }

    </script>
    <apex:outputPanel id="SurveyCollectDataJsActionsPanel" rendered="false" />
    <apex:form id="SurveyCollectDataJsActions">
        <apex:actionFunction name="salvedCollectorOperation" oncomplete="savedCollectorCompleted({!success}, {!TEXT(numberRecipeint)},'{!error}')" action="{!doOperation}" rerender="recipientsListPanel">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
            <apex:param name="TSSurveyId" value="" assignTo="{!TSSurveyId}" />
            <apex:param name="salvedEmails" value="" assignTo="{!salvedEmails}" />
            <apex:param name="salvedContactIds" value="" assignTo="{!salvedContactIds}" />
            <apex:param name="salvedLeadIds" value="" assignTo="{!salvedLeadIds}" />
            <apex:param name="salvedUserIds" value="" assignTo="{!salvedUserIds}" />
        </apex:actionFunction>
        <apex:actionFunction name="updateRecipientListAction" oncomplete="updateRecipientListCompleted()" action="{!updateRecipientList}" rerender="recipientsListPanel" />
        <apex:actionFunction name="removeRecipientOperation" oncomplete="removeRecipientCompleted({!success}, '{!error}', '{!Id}')" action="{!doOperation}" rerender="recipienListContainer">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
            <apex:param name="TSSurveyId" value="" assignTo="{!TSSurveyId}" />
            <apex:param name="Id" value="" assignTo="{!Id}" />
            <apex:param name="typeId" value="" assignTo="{!typeId}" />
        </apex:actionFunction>
        <apex:actionFunction name="NameEmailsCollectOperation" oncomplete="NameEmailsCollectCompleted('{!success}', '{!error}','{!outputMessage}')" action="{!doOperation}" rerender="recipienListContainer">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
            <apex:param name="TSSurveyId" value="" assignTo="{!TSSurveyId}" />
            <apex:param name="ContactIds" value="" assignTo="{!ContactIds}" />
            <apex:param name="LeadIds" value="" assignTo="{!LeadIds}" />
            <apex:param name="UserIds" value="" assignTo="{!UserIds}" />
            <apex:param name="Emails" value="" assignTo="{!Emails}" />
        </apex:actionFunction>
        <apex:actionFunction name="stopCollectionOperation" oncomplete="collectionComplete({!success}, '{!status}');" action="{!stopCollection}" rerender="anonymousPanel, anonymousPanel">
            <apex:param name="TSSurveyId" value="" assignTo="{!TSSurveyId}" />
            <apex:param name="status" value="" assignTo="{!status}" />
        </apex:actionFunction>
        <apex:actionFunction name="startCollectionOperation" oncomplete="collectionComplete({!success}, '{!status}');" action="{!startCollection}" rerender="anonymousPanel, anonymousPanel">
            <apex:param name="TSSurveyId" value="" assignTo="{!TSSurveyId}" />
            <apex:param name="status" value="" assignTo="{!status}" />
        </apex:actionFunction>
        <apex:actionFunction name="anonymousSurveyStatusOperation" oncomplete="anonymousSurveyStatusComplete({!success}, '{!status}')" action="{!setAnonymous}" rerender="anonymousPanel">
            <apex:param name="Status" value="" assignTo="{!Status}" />
        </apex:actionFunction>
        <apex:actionFunction name="setMultiFillStatusOperation" oncomplete="dataContainerOverlay.hide(); setMultiFillStatusComplete('{!success}', '{!status}')" action="{!doOperation}" rerender="SurveyCollectDataJsActionsPanel">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
            <apex:param name="Status" value="" assignTo="{!Status}" />
        </apex:actionFunction>
        <apex:actionFunction name="showEmailNotificationsOperation" oncomplete="showEmailNotificationsComplete({!success})" action="{!showEmailNotifications}" rerender="SurveyCollectDataJsActionsPanel">
            <apex:param name="enableNotify" value="" assignTo="{!enableNotify}" />
            <apex:param name="notifyToEmail" value="" assignTo="{!notifyToEmail}" />
        </apex:actionFunction>
        <apex:actionFunction name="saveLeadCatchingOperation" oncomplete="saveLeadCatchingComplete({!success},'{!createLeadsEnabled}')" action="{!createLead}" rerender="SurveyCollectDataJsActionsPanel">
            <apex:param name="createLeadsEnabled" value="" assignTo="{!createLeadsEnabled}" />
            <apex:param name="required_lead_data" value="" assignTo="{!lead_info_required}" />
        </apex:actionFunction>
        <apex:actionFunction name="removeRecipientListOperation" oncomplete="removeRecipientListComplete({!success}, '{!numerInvitation}')" action="{!doOperation}" rerender="brothersWrapper">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
        </apex:actionFunction>
        <apex:actionFunction name="sendByChatterSurveyOperation" oncomplete="sendByChatterSurveyComplete({!success}, '{!status}')" action="{!sendByChatter}" rerender="chatter_feed">
            <apex:param name="Status" value="" assignTo="{!Status}" />
        </apex:actionFunction>
        <apex:actionFunction name="createCustomerPortalTemplateOperation" oncomplete="createCustomerPortalTemplateComplete({!success})" action="{!doOperation}" rerender="SurveyCollectDataJsActionsPanel">
            <apex:param name="Operation" value="" assignTo="{!Operation}" />
        </apex:actionFunction>
        <apex:actionFunction name="surveyExpirationDate" oncomplete="surveyExpirationDateCompleted({!success},'{!outputMessage}')" action="{!surveyExpirationDate}">
        	<apex:param name="expirationDateEnabled" value="" assignTo="{!expirationDateEnabled}" />
        	<apex:param name="expirationDate" value="" assignTo="{!expirationDate}" />
        </apex:actionFunction>
        <apex:actionFunction name="paginationNext" action="{!Recipient_CollectorController.GoNext}"  onComplete="attachListCollect()" rerender="listCollectPanel" />
        <apex:actionFunction name="paginationNextSelectRecip" action="{!Recipient_CollectorController.GoNext}"  onComplete="attachListCollectSelectRecip()" rerender="listCollectPanelHide" />
    </apex:form>
</apex:page>